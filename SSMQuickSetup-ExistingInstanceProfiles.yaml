

AWSTemplateFormatVersion: '2010-09-09'
Description: 'Creates the automation document and association that is used to attach SSM policies to EC2 instance profiles in order to activate the SSM agent.'
Resources:
  Automation:
    Type: AWS::SSM::Document
    Properties:
      Name: !Sub '${AWS::StackName}-SSMAttachPoliciesToExistingInstanceProfiles'
      DocumentType: Automation
      Content: 
        description: |
          # SSM QuickSetup - Existing Instance Profile
          Automatically attaches SSM managed policies to EC2 instance profiles/roles. Useful when EC2 instances already have a role or profile assigned.        
        assumeRole: "{{AutomationAssumeRole}}"
        schemaVersion: '0.3'
        outputs:
          - attachPoliciesToExistingProfile.Result
        parameters:
          AutomationAssumeRole:
            type: String
          InstanceId:
            type: String
        mainSteps:
          - name: attachPoliciesToExistingProfile
            action: 'aws:executeScript'    
            inputs:
              Runtime: python3.7
              Handler: script_handler
              InputPayload:
                InstanceId: '{{InstanceId}}'        
              Script: |-
                import boto3
                def script_handler (events, context):
                    policy_arns = [
                        'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore',
                        'arn:aws:iam::aws:policy/AmazonSSMPatchAssociation'
                    ]
                    print ("InstanceId: {}".format(events["InstanceId"]))
                    iam = boto3.client('iam')
                    ec2 = boto3.client('ec2')
                    instances = ec2.describe_instances(
                        InstanceIds=[events["InstanceId"]]
                    )
                    profile_arn = instances['Reservations'][0]["Instances"][0].get('IamInstanceProfile', {}).get('Arn', None)
                    print('Profile Arn: {}'.format(profile_arn))
                    if not profile_arn:
                        print("No instance profile attached, skipping.")
                        return "No Profile Attached"

                    paginator = iam.get_paginator('list_instance_profiles')
                    list_instance_profiles_iterator = paginator.paginate()

                    for profiles in list_instance_profiles_iterator:
                        for profile in profiles['InstanceProfiles']:
                            if profile['Arn'] == profile_arn:
                                print("Found matching Arn: {}".format(profile['Arn']))
                                profile_role = profile['Roles'][0]['RoleName']                
                                for policy in policy_arns:
                                    print("Attaching {} to {}".format(policy, profile_role))
                                    iam.attach_role_policy(RoleName=profile_role, PolicyArn=policy)
                                return "Policies attached to {}".format(profile_role)
            outputs:
              - Name: Result
                Type: String
                Selector: $.Payload

  SSMQuickSetupExistingProfilesRole:
    Type: AWS::IAM::Role
    Properties:
      Path: '/'
      AssumeRolePolicyDocument: 
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ssm.amazonaws.com
            Action: 'sts:AssumeRole'                
      Policies:
        - PolicyName: "AllowUpdatingInstanceProfileRole"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: 
                  - 'iam:AttachRolePolicy'                  
                Resource: "*"
                Condition:
                  ForAllValues:StringEqualsIgnoreCase:
                    iam:PolicyARN:
                      - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
                      - 'arn:aws:iam::aws:policy/AmazonSSMPatchAssociation'
              - Effect: "Allow"
                Action:
                  - 'ec2:DescribeInstances'
                  - 'iam:ListInstanceProfiles'
                Resource: "*"

              
  SSMQuickSetupExistingProfilesAssociation:
    Type: AWS::SSM::Association 
    Properties:
      AssociationName: "SSMQuickSetupAttachToExistingRoles"
      Name: !Ref Automation
      Targets:
        - Key: InstanceIds
          Values: 
            - "*"
      ScheduleExpression: 'rate(1 day)'
      ComplianceSeverity: UNSPECIFIED
      AutomationTargetParameterName: InstanceId
      Parameters:
        AutomationAssumeRole: 
          - !GetAtt SSMQuickSetupExistingProfilesRole.Arn



      